// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserAccount {
  id            String        @id @default(uuid())
  frist_name    String
  last_name     String
  email         String        @unique
  hash_password String
  is_active     Boolean       @default(true)
  ts_created    DateTime      @default(now())
  ts_updated    DateTime      @updatedAt()
  invoice_user  InvoiceUser[]
}

model InvoiceUser {
  id             String         @id @default(uuid())
  user_id        String
  reservation_id String
  invoice_amount Float
  ts_issued      DateTime       @default(now())
  ts_paid        DateTime
  user           UserAccount    @relation(fields: [user_id], references: [id])
  room_reserved  RoomReserved[]
}

model RoomReserved {
  id               String      @id @default(uuid())
  room_id          String
  price            Float
  invoice_guest_id String
  invoice_user     InvoiceUser @relation(fields: [invoice_guest_id], references: [id])
  room             Room        @relation(fields: [room_id], references: [id])
}

model Room {
  id            String         @id @default(uuid())
  room_name     String
  description   Json
  hotel_id      String
  room_type_id  String
  current_price Float
  images        String[]
  room_reserved RoomReserved[]
  room_type     RoomType       @relation(fields: [room_type_id], references: [id])
  hotel         Hotel          @relation(fields: [hotel_id], references: [id])
}

model RoomType {
  id        String @id @default(uuid())
  type_name String
  Room      Room[]
}

model Hotel {
  id          String   @id @default(uuid())
  hotel_name  String
  description String
  company_id  String
  city_id     String
  category_id String
  address     String
  is_active   Boolean  @default(true)
  images      String[]
  room        Room[]
  category    Category @relation(fields: [category_id], references: [id])
  city        City     @relation(fields: [city_id], references: [id])
  company     Company  @relation(fields: [company_id], references: [id])
}

model Category {
  id            String  @id @default(uuid())
  category_name String
  hotel         Hotel[]
}

model City {
  id        String   @id @default(uuid())
  city_name String   @unique
  thumbnail String
  hotel     Hotel[]
  company   Company?
}

model Company {
  id              String        @id @default(uuid())
  company_name    String
  email           String
  city_id         String        @unique
  company_address String
  details         String
  is_active       Boolean       @default(true)
  city            City          @relation(fields: [city_id], references: [id])
  hotel           Hotel[]
  adminAccount    AdminAccount?
}

model AdminAccount {
  id            String  @id @default(uuid())
  name_company  String
  user_name     String
  hash_password String
  company_id    String  @unique
  company       Company @relation(fields: [company_id], references: [id])
}
